前情回顾

1. 非阻塞IO

   非阻塞 ：  setblocking()

   超时检测 ： settimeout()

2. IO 多路复用

   select

   poll    p = poll()  p.register()  p.unregister()  p.poll()

   epoll

   * 三种IO多路复用方法的区别

练习： 通过http方法，让浏览器访问到 python.html这个网页


基础的web服务

主要功能 ：
【1】 接收客户端（浏览器）请求

【2】 解析客户端发送的请求

【3】 根据请求组织数据内容

【4】 将数据内容形成http响应格式返回给浏览器

特点 ：
【1】 采用IO并发，可以满足多个客户端同时发起请求情况

【2】 通过类接口形式进行功能封装

【3】 做基本的请求解析，根据具体请求返回具体内容，同时处理客户端的非网页请求行为


类封装

1.  从功能使用方法的角度分析

2.  借鉴已经用过的一下标准库模块中的类

     socket()
        实例化对象 --》 消息的收发（确定事件）

        尽可能的将功能模块化，降低耦合度，提高内聚，方便使用者调用

     Process()
        实例化对象 --》 调用start 启动进程

        尽可能让使用者用起来简单，通过简单的接口调用和传参就可以实现核心目的

     传参 : 帮助用户实现功能的同时，必须由用户决定的需要参数传入

     原则 ： 能够替用户搞定的，不麻烦用户

编写步骤 ： （先搭建框架模型，再实现具体业务逻辑）

1. 创建tcp套接字
2. 搭建IO多路复用模型
3. 接收客户端请求
4. 处理解析客户端请求
5. 组织网页内容
6. 发送网页内容


作业 ： 1. WEBSERVER 程序  自己写一遍
       2. 注册一个账号  github.com
